import {FormRuleModel, FormItem} from "@hi-ui/form";
import React from "react";
import {Input, Select} from "@hi-ui/hiui";
import {ClientCreationContentProp} from "../ClientCreationDialog";
import ClientType from "Frontend/generated/io/github/driveindex/core/client/ClientType";
import {i18n, key, translate} from "@vaadin/hilla-react-i18n";

export const useClientCreationForm = () => {
    // TODO: Using object-oriented
    return new Map<ClientType, Record<string, FormRuleModel[]>>()
//     [
//         [ClientType.OneDrive,
//             "azure_client_id": [
//         {
//             required: true,
//             type: "string",
//             message: t("profile_drive_creation_OneDrive_client_id_empty")
//         }
//     ],
//         "azure_client_secret": [
//         {
//             required: true,
//             type: "string",
//             message: t("profile_drive_creation_OneDrive_client_secret_empty")
//         }
//     ],
//         "tenant_id": [
//         {
//             required: false,
//             type: "string",
//             message: t("profile_drive_creation_OneDrive_tenant_id_empty")
//         }
//     ],
//         "end_point": [
//         {
//             required: false,
//             type: "string",
//             message: t("profile_drive_creation_OneDrive_end_point_empty")
//         }
//     ],
// }]
// ]
}

export const OneDriveClientCreationContent = (props: ClientCreationContentProp) => {
    return (
        <>
            <FormItem
                required={true}
                field={["data", "azure_client_id"]}
                label={translate(key`profile.drive.add.client.OneDrive.clientId`)}
                formMessage={translate(key`profile.drive.add.client.OneDrive.clientId.hint`)}>
                <Input disabled={props.isEdit || props.loading} />
            </FormItem>
            <FormItem
                required={true}
                field={["data", "azure_client_secret"]}
                label={translate(key`profile.drive.add.client.OneDrive.clientSecret`)}
                formMessage={translate(key`profile.drive.add.client.OneDrive.clientSecret.hint`)}>
                <Input disabled={props.loading} />
            </FormItem>
            <FormItem
                field={["data", "tenant_id"]}
                label={translate(key`profile.drive.add.client.OneDrive.tenantId`)}
                formMessage={translate(key`profile.drive.add.client.OneDrive.tenantId.hint`)}>
                <Input disabled={props.isEdit || props.loading} />
            </FormItem>
            <FormItem
                required={true}
                field={["data", "end_point"]}
                label={translate(key`profile.drive.add.client.OneDrive.endpoint`)}>
                <Select
                    clearable={false}
                    disabled={props.isEdit || props.loading}
                    data={Array.from(OneDriveEndPointSelection).map(([key, _]) => {
                        return {
                            title: i18n.translateDynamic(`profile.drive.add.client.OneDrive.endpoint.${key}`),
                            id: key,
                        }
                    })}/>
            </FormItem>
        </>
    )
}

type OneDriveEndPoint = "Global" | "CN"
// TODO: use enum generated by backend
const OneDriveEndPointSelection = new Map<OneDriveEndPoint, undefined>([
    ["Global", undefined],
    ["CN", undefined],
])

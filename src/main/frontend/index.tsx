/******************************************************************************
 * This file is auto-generated by Vaadin.
 * If you want to customize the entry point, you can copy this file or create
 * your own `index.tsx` in your frontend directory.
 * By default, the `index.tsx` file should be in `./frontend/` folder.
 *
 * NOTE:
 *     - You need to restart the dev-server after adding the new `index.tsx` file.
 *       After that, all modifications to `index.tsx` are recompiled automatically.
 *     - `index.js` is also supported if you don't want to use TypeScript.
 ******************************************************************************/

import { Suspense, createElement } from 'react';
import { createRoot } from 'react-dom/client';
import { RouterProvider } from 'react-router';
import { router } from 'Frontend/generated/routes.js';
import { ViewportProvider } from './core/hooks/useViewport';
import {Loading} from "@hi-ui/hiui";
import {LoadingCover} from "Frontend/core/hooks/useLoading";
import i18next from "i18next";
import I18nextBrowserLanguageDetector from "i18next-browser-languagedetector";
import {initReactI18next} from "react-i18next";
import {resources} from "Frontend/i18next/resources";

i18next.use(I18nextBrowserLanguageDetector)
    .use(initReactI18next)
    .init({
        resources,
        fallbackLng: "zh",
        lng: navigator.language,
    })

function App() {
    return (
        <ViewportProvider>
            <Suspense fallback={<Loading full={true}/>}>
                <LoadingCover>
                    <RouterProvider router={router} />
                </LoadingCover>
            </Suspense>
        </ViewportProvider>
    );
}

const outlet = document.getElementById('outlet')!;
let root = (outlet as any)._root ?? createRoot(outlet);
(outlet as any)._root = root;
root.render(createElement(App));

